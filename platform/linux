#!/bin/bash
####################################################################
# PREY Linux Functions - by Tomas Pollak (bootlog.org)
# URL : http://prey.bootlog.org
# License: GPLv3
####################################################################

####################################################################
# vars
####################################################################

getter='wget -q -O -'

####################################################################
# functions
####################################################################

function check_url {
	config=`$getter $url`
}

function get_network_info {
	routes=`route -n`
	mac=`ifconfig | grep 'HWaddr' | cut -d: -f2-7`
	wifi_info=`iwconfig 2>&1 | grep -v "no wireless"`
}

function try_to_connect {
	# Find device used for wifi.
	devlist=$(cat /proc/net/wireless | tail --lines=1) 2>/dev/null
	devleft=${devlist#' '*}
	devright=${devlist%%':'*}
	echo $devright | grep "" > /tmp/dev_pure
	dev=$(cat /tmp/dev_pure)

	# Get a list of open wifi points, and choose one
	iwlist $dev scan > /tmp/scan_output 2>/dev/null
	scanone=$(egrep 'ESSID|Encryption' /tmp/scan_output)
	essidone=${scanone%%"Encryption key:off"*}
	essidquot=${essidone##*'ESSID:"'}
	essid=${essidquot%'"'*}

	# lets see if we have a valid device and essid
	if [[ ! -z $essid && ! -z $dev ]]; then
		iwconfig $dev essid $essid
		wifi_info=`iwconfig 2>&1 | grep -v "no wireless"`
	else
		echo "$STRING_NO_CONNECT_TO_WIFI"
	fi
}

function get_images {
	# we may need to know who the logged user is
	logged_user=`who | cut -d' ' -f1 | sort -u | tail -1`

	# si tenemos streamer, saquemos la foto
	streamer=`which streamer`
	if [ -n "$streamer" ]; then

		$streamer -o /tmp/imagen.jpeg &> /dev/null # streamer necesita que sea JPEG (con la E) para detectar el formato

		if [ -e '/tmp/imagen.jpeg' ]; then

			mv /tmp/imagen.jpeg $picture

		else # by Vanscot, http://www.hometown.cl/ --> some webcams are unable to take JPGs so we grab a PPM

			$streamer -o /tmp/imagen.ppm &> /dev/null
			if [ -e '/tmp/imagen.ppm' ]; then

				$convert=`which convert`
				if [ -n "$convert" ]; then # si tenemos imagemagick instalado podemos convertirla a JPG
					$convert /tmp/imagen.ppm $picture > /dev/null
				else # trataremos de enviarla asi nomas
					picture='/tmp/imagen.ppm'
				fi

			fi

		fi

	fi

	scrot=`which scrot` # scrot es mas liviano y mas rapido
	import=`which import` # viene con imagemagick, mas obeso

	if [ -n "$scrot" ]; then

		if [ `whoami` == 'root' ]; then
			DISPLAY=:0 su $logged_user -c "$scrot $screenshot"
		else
			$scrot $screenshot
		fi

	elif [ -n "$import" ]; then

		args="-window root -display :0"

		if [ `whoami` == 'root' ]; then # friggin su command, cannot pass args with "-" since it gets confused
			su $logged_user -c "$import $args $screenshot"
		else
			$import $args $screenshot
		fi

	fi
}

function change_wallpaper {
	gconftool=`which gconftool-2`
	kdesktop=`which kdesktop`
	xfce=`which xfconf-query`

	if [ -n "$gconftool" ]; then

		$gconftool --type string --set /desktop/gnome/background/picture_filename $wallpaper
		$gconftool --type string --set /desktop/gnome/background/picture_options 'zoom'

	elif [ -n "$kdesktop" ]; then # untested

		$kdesktop KBackgroundIface setWallpaper $wallpaper 5

	elif [ -n "$xfce" ]; then # requires xfce 4.6

		$xfce -c xfce4-desktop -p /backdrop/screen0/monitor0/image-path -s $wallpaper

	fi
}

function alert_user {
	# veamos si tenemos zenity o kdialog
	zenity=`which zenity`
	kdialog=`which kdialog`

	if [ -n "$zenity" ]; then

		# lo agarramos pal weveo ?
		# zenity --question --text "Este computador es tuyo?"
		# if [ $? = 0 ]; then
			# TODO: inventar buena talla
		# fi

		 # mensaje de informacion
		# zenity --info --text "Obtuvimos la informacion"

		 # mejor, mensaje de error!
		$zenity --error --text "$alertmsg"

	elif [ -n "$kdialog" ]; then #untested!

		$kdialog --error "$alertmsg"

	fi
}

function kill_x {
	pkill "gdm|kdm|xdm|entrance"
}
