#!/bin/bash
####################################################################
# Prey Mac Specific Functions - by Tomas Pollak (bootlog.org) and Diego Torres (warorface.com)
# URL : http://preyproject.com
# License: GPLv3
####################################################################

run_as_current_user(){
	if [ "`whoami`" == "root" ]; then
		launchctl bsexec $logged_pid `eval echo $1`
	else
		eval $1
	fi
}

get_gateway_ip() {
	if [ -z "$gateway_ip" ]; then
		netstat=$(which netstat)
		if [ -n "$netstat" ]; then
			gateway_ip=$($netstat -rn | grep default | cut -c20-35)
		fi
	fi
}

get_wifi_info() {
	wifi_info=$($airport -s | grep -v "Off")
	if [ -z "$wifi_info" ]; then
		enable_airport
		wifi_info=$($airport -s | grep -v "Off")
	fi
}

disable_airport(){
	if [ $osx_version == "snow-leopard" ]; then
		local airportstring="Airport"
	fi
	networksetup -setnetworkserviceenabled AirPort off 2>/dev/null
	networksetup -setairportpower $airportstring off 2>/dev/null
}

enable_airport(){
	if [ $osx_version == "snow-leopard" ]; then
		local airportstring="Airport"
	fi
	networksetup -setnetworkserviceenabled AirPort on 2>/dev/null
	networksetup -setairportpower $airportstring on 2>/dev/null
}

try_to_connect() {
	disable_airport
	enable_airport

	# list available access points and parse to get first SSID with security "NONE"
	local essid=$($airport -s | grep NONE | sort -k3 -r | head -1 | cut -c1-32 | sed 's/^[ \t]*//')

	if [ -n "$essid" ]; then
		if [ $osx_version == "snow-leopard" ]; then
			local airportstring="Airport"
		fi
		networksetup -setairportnetwork $airportstring "$essid" 2>/dev/null
	fi
}

############################################
# updater-specific functions
############################################

# check plist, shutdown task
pre_update_hook(){
	return 0
}

# post update hooks go in here
post_update_hook(){
	log ' -- Reloading Prey...'
	$base_path/prey.sh & # lets restart prey now
}

############################################
# Device creation parameters
############################################
get_pc_info(){
	pc_name=$(system_profiler SPSoftwareDataType | grep 'Computer Name' | sed 's/.*: //g')
	pc_os_version=$osx_version

	local is_macbook=$(system_profiler SPHardwareDataType | grep -i 'macbook')
	if [ -z "$is_macbook" ]; then
		pc_type="Desktop"
	else
		pc_type="Portable"
	fi

}
