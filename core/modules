#!/bin/bash
####################################################################
# Prey Core Module Functions - by Tomas Pollak (bootlog.org)
# URL: http://preyproject.com
# License: GPLv3
####################################################################

# mac/linux only. windows has another method of de/activating modules
is_module_active(){
	if [ -x "$base_path/modules/$1/core/run" ]; then
		echo 1
	else
		return 0
	fi
}

active_modules(){
	if [ "$post_method" == "http" ]; then
		echo -e "$module_configuration" | grep "<module " | sed 's/.*name="\([a-z_]*\)".*/\1/'
	else
		for module in `find "$base_path/modules" -maxdepth 1 -mindepth 1 -type d`; do
			local module_name=`echo $module | sed 's/.*[\\|\/]\([a-z_-]*\)$/\1/'`
			if [ `is_module_active "$module_name"` ]; then
				echo $module_name
			fi
		done
	fi
}

initialize_module() {

	module_path="$base_path/modules/$1"
	module_platform_path="$module_path/platform/$os"

	if [ ! -d "$module_path" ]; then
		echo " !! Module $1 not found!"
		install_or_update_module $module
		if [ $? == 1 ]; then # it didnt work
			return 1
		fi
	fi

	# if there's a language file, lets run it
	if [ -f "$module_path/lang/$lang" ]; then
	. "$module_path/lang/$lang"
	elif [ -f "$module_path/lang/$lang" ]; then
	. "$module_path/lang/en"
	fi

	# if there's a config file, lets run it as well
	if [ -f "$module_path/config" ]; then
		. "$module_path/config" 2> /dev/null # dont echo readonly conflicts
	fi

	# lets load the base functions for the module
	if [ -f "$module_path/core/functions" ]; then
		. "$module_path/core/functions"
	fi

	# and the OS-specific if there are
	if [ -f "$module_platform_path/functions" ]; then
		. "$module_platform_path/functions"
	fi

}

run_active_modules() {

	for current_module in `active_modules`; do

		initialize_module $current_module
		if [ $? == 1 ]; then
			continue
		fi

		echo -e "\n${bold} >> Running $current_module module!${bold_end}\n"

		# now, go!
		. "$module_path/core/run"

	done

}
